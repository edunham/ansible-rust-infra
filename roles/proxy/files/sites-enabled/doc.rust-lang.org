# You may add here your
# server {
#   ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid
# understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;

    #listen 443 default_server ssl;
    include /etc/nginx/conf.d/rust-lang-org-ssl;

    server_name doc.rust-lang.org;

    sub_filter_once off;

    location =/robots.txt { root /home/ubuntu/; }
    location =/favicon.ico { root /home/ubuntu/; }

    # Proxy github rust-lang crates' documentation back to github
    location =/regex {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/regex/;
    }
    location ~ ^/regex {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/uuid {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/uuid/;
    }
    location ~ ^/uuid {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/time {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/time/;
    }
    location ~ ^/time {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/semver {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/semver/;
    }
    location ~ ^/semver {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/rustc-serialize {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/rustc-serialize/;
    }
    location ~ ^/rustc-serialize {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/log {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/log/;
    }
    location ~ ^/log {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/getopts {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/getopts/;
    }
    location ~ ^/getopts {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/glob {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/glob/;
    }
    location ~ ^/glob {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/num {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/num/;
    }
    location ~ ^/num {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/term {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/term/;
    }
    location ~ ^/term {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/libc {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/libc/;
    }
    location ~ ^/libc {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/bitflags {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/bitflags/;
    }
    location ~ ^/bitflags {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/rand {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/rand/;
    }
    location ~ ^/rand {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/threadpool {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/threadpool/;
    }
    location ~ ^/tempdir {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }
    location =/tempdir {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/tempdir/;
    }
    location ~ ^/threadpool {
        include /etc/nginx/conf.d/github-proxy;
        proxy_pass http://rust-lang.github.io/$request_uri;
    }

    # Documentation which no longer needs to be indexed
    location ~ ^/0.([0-9])/.*/$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        add_header X-Robots-Tag noindex;
        proxy_pass http://$s3_bucket/doc${request_uri}index.html;
    }
    location ~ ^/0.([0-9])/.* {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        add_header X-Robots-Tag noindex;
        proxy_pass http://$s3_bucket/doc$request_uri;
    }

    # Old documentation doesn't need to be redirected
    location ~ ^/[0-9]+.[0-9]+.*/$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc${request_uri}index.html;
    }
    location ~ ^/[0-9]+.[0-9]+.* {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc$request_uri;
    }
    # Nom on the nomicon links. s/nightly/stable once it comes out.
    location ^/adv-book {
        rewrite ^/adv-book(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/rustonomicon {
        rewrite ^/rustonomicon(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/rustinomicon {
        rewrite ^/rustinomicon(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/trpl {
        rewrite ^/trpl(.*) https://doc.rust-lang.org/nightly/book$1 permanent;
    }
    # /stable/thing goes to /stable/thing
    location ^/stable/adv-book {
        rewrite ^/stable/adv-book(.*) https://doc.rust-lang.org/stable/nomicon$1 permanent;
    }
    location ^/stable/rustonomicon {
        rewrite ^/stable/rustonomicon(.*) https://doc.rust-lang.org/stable/nomicon$1 permanent;
    }
    location ^/stable/rustinomicon {
        rewrite ^/stable/rustinomicon(.*) https://doc.rust-lang.org/stable/nomicon$1 permanent;
    }
    location ^/stable/trpl {
        rewrite ^/stable/trpl(.*) https://doc.rust-lang.org/stable/book$1 permanent;
    }
    # /nightly/thing goes to /nightly/thing
    location ^/nightly/adv-book {
        rewrite ^/nightly/adv-book(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/nightly/rustonomicon {
        rewrite ^/nightly/rustonomicon(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/nightly/rustinomicon {
        rewrite ^/nightly/rustinomicon(.*) https://doc.rust-lang.org/nightly/nomicon$1 permanent;
    }
    location ^/nightly/trpl {
        rewrite ^/nightly/trpl(.*) https://doc.rust-lang.org/nightly/book$1 permanent;
    }
    # Redirect all master documentation to `nightly`
    location ~ ^/master(?<path>.*)$ {
        return 301 $scheme://$http_host/nightly$path;
    }

    # Send `nightly` documentation to the `master` folder on S3
    # This will in theory soon be renamed (the S3 folder).
    location ~ ^/nightly(?<path>.*/)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/master${path}index.html;
    }
    location ~ ^/nightly(?<path>.*)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/master$path;
    }

    # beta to beta!
    location ~ ^/beta(?<path>.*/)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/beta${path}index.html;
    }
    location ~ ^/beta(?<path>.*)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/beta$path;
    }

    # Send `nightly` documentation to the `master` folder on S3
    # This will in theory soon be renamed (the S3 folder).
    location ~ ^/stable(?<path>.*/)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/stable${path}index.html;
    }
    location ~ ^/stable(?<path>.*)$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/stable$path;
    }

    # Docs used to be under /doc, so redirect those for now
    location ~ ^/doc(.*)$ {
        return 301 $scheme://$http_host$1;
    }
    
    # Synonyms for nomicon and book
    rewrite ^adv-book(.*)$ nomicon$1 permanent;
    rewrite ^rustonomicon(.*)$ nomicon$1 permanent;
    rewrite ^rustinomicon(.*)$ nomicon$1 permanent;
    
    rewrite ^trpl(.*)$ book$1 permanent;

    # Redirect all other documentation to master
    location ~ /$ {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/stable${request_uri}index.html;
    }
    location / {
        include /etc/nginx/conf.d/s3-bucket-proxy;
        proxy_pass http://$s3_bucket/doc/stable$request_uri;
    }
}

