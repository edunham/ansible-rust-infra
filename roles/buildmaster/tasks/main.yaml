---
- name: Create Rustbuild user
  user:
      name: "rustbuild"
      home: "/home/rustbuild"
      shell: /bin/bash
      createhome: yes

- name: Install prerequisite packages
  apt:
      pkg={{ item }}
      state=present
      update_cache=yes
  with_items:
      - python
      - python3
      - python-pip
      - python-dev
      - python-setuptools
      - python-virtualenv
      - stunnel
      - python-openssl 
      - libffi-dev
      - libssl-dev
      - git

- name: Clone Homu
  git:
      repo='https://github.com/barosl/homu.git'
      dest='/home/rustbuild/homu'
      accept_hostkey=yes
  become: yes
  become_user: rustbuild
  when: noclone == False

- name: Clone the Buildbot configs
  git:
      repo='https://github.com/rust-lang/rust-buildbot.git'
      dest='/home/rustbuild/rust-buildbot'
      accept_hostkey=yes
  become: yes
  become_user: rustbuild
  when: noclone == False

# Separate because Homu is python3
- name: Create a python3 virtualenv for Homu
  command: virtualenv -p python3 /home/rustbuild/homu-venv
  args: 
    creates: /home/rustbuild/homu-venv
  become: yes
  become_user: rustbuild

- name: Install Homu to his virtualenv
  pip:
    virtualenv=/home/rustbuild/homu-venv
    name="-e git+https://github.com/barosl/homu@15ea10b8226a0544d92e4c3f8065705eae51b957#egg=homu-master"

- name: Create Buildbot virtualenv and install packages 
  pip:
    virtualenv=/home/rustbuild/buildmaster-venv
    name="{{ item }}"
  with_items: 
    - buildbot==0.8.12
    - boto
    - pyopenssl
    - cryptography
    - -e git+https://github.com/edunham/v2_rust_metadata@master#egg=rust-v2-metadata
  become: yes
  become_user: rustbuild

- name: Start Buildbot
  command: /home/rustbuild/buildmaster-venv/bin/buildbot start master
  args:
      chdir: /home/rustbuild/rust-buildbot
  become: yes
  become_user: rustbuild

# TODO FIXME: pastebin tail of Buildbot log and dump it in IRC if buildbot start
# failed

# TODO FIXME: Start stunnels if necessary
